import{_ as n,V as s,W as a,a1 as e}from"./framework-5e2051d8.js";const t={},p=e(`<h2 id="代理模式" tabindex="-1"><a class="header-anchor" href="#代理模式" aria-hidden="true">#</a> 代理模式</h2><h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><p>代理模式是对象结构模式,代理模式给某个对象提供一个代理对象,并由代理对象控制控制原对象的引用.</p><h3 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h3><h3 id="简单实现" tabindex="-1"><a class="header-anchor" href="#简单实现" aria-hidden="true">#</a> 简单实现</h3><p>定义抽象类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>anakin<span class="token punctuation">.</span>design_pattern_test<span class="token punctuation">.</span>proxy_method</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * Created by demo on 2017/2/8 0008
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractObject</span> <span class="token punctuation">{</span>

        <span class="token comment">// 需要的操作</span>
        <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义真正的实现的类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>anakin<span class="token punctuation">.</span>design_pattern_test<span class="token punctuation">.</span>proxy_method</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Created by demo on 2017/2/8 0008
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RealObject</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractObject</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;  need to do something &gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义代理类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>anakin<span class="token punctuation">.</span>design_pattern_test<span class="token punctuation">.</span>proxy_method</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Created by demo on 2017/2/8 0008
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProxyObject</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractObject</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 调用具体操作前可以做操作</span>
            <span class="token class-name">AbstractObject</span> real <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RealObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            real<span class="token punctuation">.</span><span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 调用具体操作后可以做操作</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>      <span class="token comment">// 代理模式测试</span>
      <span class="token class-name">AbstractObject</span> proxy <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ProxyObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      proxy<span class="token punctuation">.</span><span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">02</span><span class="token operator">-</span><span class="token number">08</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">41.821</span> <span class="token number">18278</span><span class="token operator">-</span><span class="token number">18278</span><span class="token operator">/</span>com<span class="token punctuation">.</span>anakin<span class="token punctuation">.</span>design_pattern_test <span class="token class-name">I</span><span class="token operator">/</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">:</span>   need <span class="token keyword">to</span> <span class="token keyword">do</span> something <span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),c=[p];function o(l,i){return s(),a("div",null,c)}const u=n(t,[["render",o],["__file","设计模式-代理模式.html.vue"]]);export{u as default};
