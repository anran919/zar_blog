const t=JSON.parse(`{"key":"v-24913129","path":"/posts/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html","title":"简单工厂模式.md","lang":"zh-CN","frontmatter":{"title":"简单工厂模式.md","date":"2017-02-17T11:25:59.000Z","category":["Java"],"tags":["设计模式"],"description":"##　简单工厂模式 定义抽象的工厂类 工厂类包定义公共的方法实现，和不同实现的抽象方法 定义根据参数创建实例对象，返回抽象类的静态方法 使用静态方法传入要获取对象的tag,获取对象的实例，调用实例的方法","head":[["meta",{"property":"og:url","content":"https://github.com/zar_blog/posts/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Anakin's blog"}],["meta",{"property":"og:title","content":"简单工厂模式.md"}],["meta",{"property":"og:description","content":"##　简单工厂模式 定义抽象的工厂类 工厂类包定义公共的方法实现，和不同实现的抽象方法 定义根据参数创建实例对象，返回抽象类的静态方法 使用静态方法传入要获取对象的tag,获取对象的实例，调用实例的方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-29T13:57:20.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2017-02-17T11:25:59.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-29T13:57:20.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://github.com/zar_blog/enposts/java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html"}]]},"headers":[],"git":{"createdTime":1672233821000,"updatedTime":1672322240000,"contributors":[{"name":"张安然","email":"anran0919@163.com","commits":2}]},"readingTime":{"minutes":0.38,"words":114},"filePathRelative":"posts/java/设计模式-简单工厂模式.md","localizedDate":"2017年2月17日","excerpt":"<p>##　简单工厂模式</p>\\n<ol>\\n<li>定义抽象的工厂类</li>\\n<li>工厂类包定义公共的方法实现，和不同实现的抽象方法</li>\\n<li>定义根据参数创建实例对象，返回抽象类的静态方法</li>\\n<li>使用静态方法传入要获取对象的tag,获取对象的实例，调用实例的方法</li>\\n</ol>\\n","autoDesc":true}`);export{t as data};
