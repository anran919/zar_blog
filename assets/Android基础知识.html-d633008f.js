const e=JSON.parse(`{"key":"v-bc2682d8","path":"/posts/android/Android%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html","title":"Android基础知识总结","lang":"zh-CN","frontmatter":{"icon":"Android","date":"2022-01-09T00:00:00.000Z","title":"Android基础知识总结","category":["Android"],"tag":["Android"],"description":"Android学习笔记 五种布局 LinearLayout(线性布局) 一行或者一列值放置一个控件的布局,可以设置方向,垂直排列或者水平排列,适用于简单的布局 适用场景:水平或者垂直的简单排列,如登录界面 RelativeLayout(相对布局)","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zar_blog/posts/android/Android%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"}],["meta",{"property":"og:site_name","content":"Anakin's blog"}],["meta",{"property":"og:title","content":"Android基础知识总结"}],["meta",{"property":"og:description","content":"Android学习笔记 五种布局 LinearLayout(线性布局) 一行或者一列值放置一个控件的布局,可以设置方向,垂直排列或者水平排列,适用于简单的布局 适用场景:水平或者垂直的简单排列,如登录界面 RelativeLayout(相对布局)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-29T10:11:57.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"Android"}],["meta",{"property":"article:published_time","content":"2022-01-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-29T10:11:57.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://mister-hope.github.io/zar_blog/enposts/android/Android%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"}]]},"headers":[{"level":2,"title":"五种布局","slug":"五种布局","link":"#五种布局","children":[{"level":3,"title":"LinearLayout(线性布局)","slug":"linearlayout-线性布局","link":"#linearlayout-线性布局","children":[]},{"level":3,"title":"RelativeLayout(相对布局)","slug":"relativelayout-相对布局","link":"#relativelayout-相对布局","children":[]},{"level":3,"title":"FrameLayout(框架布局)","slug":"framelayout-框架布局","link":"#framelayout-框架布局","children":[]},{"level":3,"title":"TableLayout(表格布局)","slug":"tablelayout-表格布局","link":"#tablelayout-表格布局","children":[]},{"level":3,"title":"AbsoluteLayout (绝对布局)","slug":"absolutelayout-绝对布局","link":"#absolutelayout-绝对布局","children":[]}]},{"level":2,"title":"Activity","slug":"activity","link":"#activity","children":[{"level":3,"title":"- Activity的生命周期","slug":"activity的生命周期","link":"#activity的生命周期","children":[]},{"level":3,"title":"Activty任务栈","slug":"activty任务栈","link":"#activty任务栈","children":[]},{"level":3,"title":"启动模式:","slug":"启动模式","link":"#启动模式","children":[]},{"level":3,"title":"Activity的缓存","slug":"activity的缓存","link":"#activity的缓存","children":[]},{"level":3,"title":"Intent","slug":"intent","link":"#intent","children":[]}]},{"level":2,"title":"Fragment","slug":"fragment","link":"#fragment","children":[{"level":3,"title":"Fragment的生命周期和Activity的关系","slug":"fragment的生命周期和activity的关系","link":"#fragment的生命周期和activity的关系","children":[]},{"level":3,"title":"Fragment的生命周期","slug":"fragment的生命周期","link":"#fragment的生命周期","children":[]}]},{"level":2,"title":"Broadcast Receiver","slug":"broadcast-receiver","link":"#broadcast-receiver","children":[{"level":3,"title":"的两种动态注册和静态注册有什么区别","slug":"的两种动态注册和静态注册有什么区别","link":"#的两种动态注册和静态注册有什么区别","children":[]}]},{"level":2,"title":"ContentProvider","slug":"contentprovider","link":"#contentprovider","children":[{"level":3,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]}]},{"level":2,"title":"Service","slug":"service","link":"#service","children":[{"level":3,"title":"为什么在Service中创建子线程","slug":"为什么在service中创建子线程","link":"#为什么在service中创建子线程","children":[]},{"level":3,"title":"Service的两种启动方法,有什么区别","slug":"service的两种启动方法-有什么区别","link":"#service的两种启动方法-有什么区别","children":[]},{"level":3,"title":"如何保证Service不被杀死","slug":"如何保证service不被杀死","link":"#如何保证service不被杀死","children":[]}]},{"level":2,"title":"动画有哪几类,各有什么特点,有什么区别","slug":"动画有哪几类-各有什么特点-有什么区别","link":"#动画有哪几类-各有什么特点-有什么区别","children":[]},{"level":2,"title":"Android的数据存储形式","slug":"android的数据存储形式","link":"#android的数据存储形式","children":[]},{"level":2,"title":"Sqlite的基本操作","slug":"sqlite的基本操作","link":"#sqlite的基本操作","children":[]},{"level":2,"title":"如何判断应用被强杀","slug":"如何判断应用被强杀","link":"#如何判断应用被强杀","children":[]},{"level":2,"title":"Json有什么优劣势","slug":"json有什么优劣势","link":"#json有什么优劣势","children":[]},{"level":2,"title":"Asset目录与res目录的区别","slug":"asset目录与res目录的区别","link":"#asset目录与res目录的区别","children":[]},{"level":2,"title":"优化","slug":"优化","link":"#优化","children":[{"level":3,"title":"Android怎么加速启动Activity","slug":"android怎么加速启动activity","link":"#android怎么加速启动activity","children":[]},{"level":3,"title":"Android内存优化方法","slug":"android内存优化方法","link":"#android内存优化方法","children":[]}]},{"level":2,"title":"自定义View的流程","slug":"自定义view的流程","link":"#自定义view的流程","children":[]},{"level":2,"title":"Android长连接,怎样处理心跳机制","slug":"android长连接-怎样处理心跳机制","link":"#android长连接-怎样处理心跳机制","children":[]},{"level":2,"title":"View的绘制流程","slug":"view的绘制流程","link":"#view的绘制流程","children":[]},{"level":2,"title":"下拉刷新的实现原理","slug":"下拉刷新的实现原理","link":"#下拉刷新的实现原理","children":[]},{"level":2,"title":"常用框架和源码分析，底层原理","slug":"常用框架和源码分析-底层原理","link":"#常用框架和源码分析-底层原理","children":[]},{"level":2,"title":"Android新特性","slug":"android新特性","link":"#android新特性","children":[{"level":3,"title":"5.0","slug":"_5-0","link":"#_5-0","children":[]},{"level":3,"title":"6.0","slug":"_6-0","link":"#_6-0","children":[]},{"level":3,"title":"7.0","slug":"_7-0","link":"#_7-0","children":[]}]},{"level":2,"title":"Context","slug":"context","link":"#context","children":[]},{"level":2,"title":"IntenService","slug":"intenservice","link":"#intenservice","children":[{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]}]},{"level":2,"title":"图片缓存","slug":"图片缓存","link":"#图片缓存","children":[{"level":3,"title":"查看程序可用最高内存","slug":"查看程序可用最高内存","link":"#查看程序可用最高内存","children":[]}]},{"level":2,"title":"Gradle","slug":"gradle","link":"#gradle","children":[{"level":3,"title":"构建工具","slug":"构建工具","link":"#构建工具","children":[]}]}],"git":{"createdTime":1672233821000,"updatedTime":1672308717000,"contributors":[{"name":"张安然","email":"anran0919@163.com","commits":2}]},"readingTime":{"minutes":5.86,"words":1759},"filePathRelative":"posts/android/Android基础知识.md","localizedDate":"2022年1月9日","excerpt":"<blockquote>\\n<p><a href=\\"https://github.com/GeniusVJR/LearningNotes\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Android学习笔记</a></p>\\n</blockquote>\\n<h2> 五种布局</h2>\\n<h3> LinearLayout(线性布局)</h3>\\n<ol>\\n<li>一行或者一列值放置一个控件的布局,可以设置方向,垂直排列或者水平排列,适用于简单的布局</li>\\n<li>适用场景:水平或者垂直的简单排列,如登录界面</li>\\n</ol>\\n<h3> RelativeLayout(相对布局)</h3>","autoDesc":true}`);export{e as data};
